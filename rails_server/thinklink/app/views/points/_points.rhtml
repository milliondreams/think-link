

<%
	rnd = rand(100000).to_s
	
	if !defined? options
		options = {}
	end
	
	$donecount = 0
	
	$parentPoints = {}
	$curPoints = []
	$topPoints	= []
	
	def addTopPoints(point)
		hasParent = false
		if $curPoints.include? point.id 
			$topPoints.push point
		end
		$curPoints.push point.id
		if ! $parentPoints[point.id] 			
			$parentPoints[point.id] = true

			point.supports_points.each do |parent| 
				hasParent = true
				addTopPoints parent				
			end		

			point.opposes_points.each do |parent| 
				hasParent = true
				addTopPoints parent				
			end		
			
			point.opposite_points.each do |parent| 
				hasParent = true
				addTopPoints parent				
			end		


			if !hasParent 
				$topPoints.push(point)
			end
		end
		$curPoints.pop
	end

	points = points.slice(0,20);

	if options[:notop]
		$topPoints = points
	else
		points.each do |point|
			addTopPoints(point)	
		end
	end
%>

<div id='points-<%=rnd%>'>
</div>

<% if !options[:intopic] %>
<div class="point_container">
<%end%>
	<% $topPoints.each do |point| %>
			<%= render_partial 'points/point', point, :expandPoints => {}, :options => options %>
	<% end %>
<% if !options[:intopic] %>
</div>
<%end%>
